# Form implementation generated from reading ui file 'forms\MainWindow.ui'
#
# Created by: PyQt6 UI code generator 6.4.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt6 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(460, 600)
        self.centralwidget = QtWidgets.QWidget(parent=MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.centralwidget)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.listWidget = QtWidgets.QListWidget(parent=self.centralwidget)
        self.listWidget.setSelectionMode(QtWidgets.QAbstractItemView.SelectionMode.MultiSelection)
        self.listWidget.setObjectName("listWidget")
        self.verticalLayout_2.addWidget(self.listWidget)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(parent=MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 460, 22))
        self.menubar.setObjectName("menubar")
        self.menuApplication = QtWidgets.QMenu(parent=self.menubar)
        self.menuApplication.setObjectName("menuApplication")
        self.menuFile = QtWidgets.QMenu(parent=self.menubar)
        self.menuFile.setObjectName("menuFile")
        self.menuWindow = QtWidgets.QMenu(parent=self.menubar)
        self.menuWindow.setObjectName("menuWindow")
        self.menuPlot = QtWidgets.QMenu(parent=self.menubar)
        self.menuPlot.setObjectName("menuPlot")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(parent=MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.toolBar = LogViewerToolbar(parent=MainWindow)
        self.toolBar.setObjectName("toolBar")
        MainWindow.addToolBar(QtCore.Qt.ToolBarArea.TopToolBarArea, self.toolBar)
        self.actionSettings = QtGui.QAction(parent=MainWindow)
        self.actionSettings.setObjectName("actionSettings")
        self.actionOpen = QtGui.QAction(parent=MainWindow)
        self.actionOpen.setObjectName("actionOpen")
        self.actionRefresh = QtGui.QAction(parent=MainWindow)
        self.actionRefresh.setEnabled(False)
        self.actionRefresh.setObjectName("actionRefresh")
        self.actionClose = QtGui.QAction(parent=MainWindow)
        self.actionClose.setEnabled(False)
        self.actionClose.setObjectName("actionClose")
        self.actionCloseAll = QtGui.QAction(parent=MainWindow)
        self.actionCloseAll.setEnabled(False)
        self.actionCloseAll.setObjectName("actionCloseAll")
        self.actionPlot = QtGui.QAction(parent=MainWindow)
        self.actionPlot.setObjectName("actionPlot")
        self.actionSpectrum = QtGui.QAction(parent=MainWindow)
        self.actionSpectrum.setCheckable(True)
        self.actionSpectrum.setObjectName("actionSpectrum")
        self.actionAssign = QtGui.QAction(parent=MainWindow)
        self.actionAssign.setObjectName("actionAssign")
        self.actionClear = QtGui.QAction(parent=MainWindow)
        self.actionClear.setObjectName("actionClear")
        self.actionSelectAll = QtGui.QAction(parent=MainWindow)
        self.actionSelectAll.setObjectName("actionSelectAll")
        self.actionSelectClear = QtGui.QAction(parent=MainWindow)
        self.actionSelectClear.setObjectName("actionSelectClear")
        self.actionAbout = QtGui.QAction(parent=MainWindow)
        self.actionAbout.setObjectName("actionAbout")
        self.menuApplication.addAction(self.actionSettings)
        self.menuApplication.addAction(self.actionAbout)
        self.menuFile.addAction(self.actionOpen)
        self.menuFile.addAction(self.actionRefresh)
        self.menuFile.addAction(self.actionClose)
        self.menuWindow.addAction(self.actionCloseAll)
        self.menuWindow.addSeparator()
        self.menuPlot.addAction(self.actionPlot)
        self.menuPlot.addAction(self.actionSpectrum)
        self.menuPlot.addSeparator()
        self.menuPlot.addAction(self.actionSelectAll)
        self.menuPlot.addAction(self.actionSelectClear)
        self.menuPlot.addSeparator()
        self.menuPlot.addAction(self.actionAssign)
        self.menuPlot.addAction(self.actionClear)
        self.menubar.addAction(self.menuFile.menuAction())
        self.menubar.addAction(self.menuPlot.menuAction())
        self.menubar.addAction(self.menuWindow.menuAction())
        self.menubar.addAction(self.menuApplication.menuAction())

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Log Viewer"))
        self.menuApplication.setTitle(_translate("MainWindow", "Application"))
        self.menuFile.setTitle(_translate("MainWindow", "File"))
        self.menuWindow.setTitle(_translate("MainWindow", "Window"))
        self.menuPlot.setTitle(_translate("MainWindow", "Plot"))
        self.toolBar.setWindowTitle(_translate("MainWindow", "toolBar"))
        self.actionSettings.setText(_translate("MainWindow", "Settings"))
        self.actionSettings.setToolTip(_translate("MainWindow", "Open application settings"))
        self.actionOpen.setText(_translate("MainWindow", "Open"))
        self.actionOpen.setToolTip(_translate("MainWindow", "Open file"))
        self.actionOpen.setShortcut(_translate("MainWindow", "Ctrl+O"))
        self.actionRefresh.setText(_translate("MainWindow", "Refresh"))
        self.actionRefresh.setToolTip(_translate("MainWindow", "Refresh file"))
        self.actionRefresh.setShortcut(_translate("MainWindow", "Ctrl+R"))
        self.actionClose.setText(_translate("MainWindow", "Close"))
        self.actionClose.setToolTip(_translate("MainWindow", "Close current file"))
        self.actionClose.setShortcut(_translate("MainWindow", "Ctrl+W"))
        self.actionCloseAll.setText(_translate("MainWindow", "Close All"))
        self.actionCloseAll.setToolTip(_translate("MainWindow", "Close all opened windows with plots"))
        self.actionCloseAll.setShortcut(_translate("MainWindow", "Ctrl+Shift+W"))
        self.actionPlot.setText(_translate("MainWindow", "Generate Plot"))
        self.actionPlot.setToolTip(_translate("MainWindow", "Generate a plot"))
        self.actionPlot.setShortcut(_translate("MainWindow", "Ctrl+P"))
        self.actionSpectrum.setText(_translate("MainWindow", "Spectrum"))
        self.actionSpectrum.setToolTip(_translate("MainWindow", "Plot spectrums instead of values"))
        self.actionSpectrum.setShortcut(_translate("MainWindow", "Ctrl+S"))
        self.actionAssign.setText(_translate("MainWindow", "Assign To Plot"))
        self.actionAssign.setToolTip(_translate("MainWindow", "Assign to a single plot"))
        self.actionAssign.setShortcut(_translate("MainWindow", "+"))
        self.actionClear.setText(_translate("MainWindow", "Clear Assignment"))
        self.actionClear.setToolTip(_translate("MainWindow", "Clear assignment"))
        self.actionClear.setShortcut(_translate("MainWindow", "Del"))
        self.actionSelectAll.setText(_translate("MainWindow", "Select All"))
        self.actionSelectAll.setToolTip(_translate("MainWindow", "Select all items"))
        self.actionSelectAll.setShortcut(_translate("MainWindow", "Ctrl+A"))
        self.actionSelectClear.setText(_translate("MainWindow", "Clear Selection"))
        self.actionSelectClear.setToolTip(_translate("MainWindow", "Clear selection"))
        self.actionSelectClear.setShortcut(_translate("MainWindow", "Ctrl+Z"))
        self.actionAbout.setText(_translate("MainWindow", "About"))
        self.actionAbout.setToolTip(_translate("MainWindow", "About application"))
from toolbar import LogViewerToolbar
